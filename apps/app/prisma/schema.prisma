generator client {
  provider      = "prisma-client-js"
  output        = "../prisma/client"
  binaryTargets = ["native", "debian-openssl-1.1.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_APP_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model AccountData {
  profileId          String             @id @unique @db.Uuid
  confirmationStatus ConfirmationStatus @default(NOT_CONFIRM)
  confirmationCode   String
  recoveryCode       String?
  githubId           String?            @unique
  googleId           String?            @unique
  user               User               @relation(fields: [profileId], references: [id])

  @@map("accountData")
}

model User {
  id           String       @id @default(uuid()) @db.Uuid
  name         String       @unique
  email        String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  deletedAt    DateTime?
  passwordHash String
  banStatus    BanStatus    @default(NOT_BANNED)
  banDate      DateTime?
  accountData  AccountData?
  sessions     Session[]

  @@map("user")
}

model Session {
  id             String   @id @default(uuid()) @db.Uuid
  profileId      String   @db.Uuid
  deviceName     String
  ip             String
  lastActiveDate DateTime
  deviceUuid     String   @unique
  user           User     @relation(fields: [profileId], references: [id])

  @@map("session")
}

model cities {
  city_id    Int     @id(map: "pk_city_cid")
  country_id Int
  important  Boolean
  region_id  Int?
  title_ru   String? @db.VarChar(150)
  area_ru    String? @db.VarChar(150)
  region_ru  String? @db.VarChar(150)
  title_ua   String? @db.VarChar(150)
  area_ua    String? @db.VarChar(150)
  region_ua  String? @db.VarChar(150)
  title_be   String? @db.VarChar(150)
  area_be    String? @db.VarChar(150)
  region_be  String? @db.VarChar(150)
  title_en   String? @db.VarChar(150)
  area_en    String? @db.VarChar(150)
  region_en  String? @db.VarChar(150)
  title_es   String? @db.VarChar(150)
  area_es    String? @db.VarChar(150)
  region_es  String? @db.VarChar(150)
  title_pt   String? @db.VarChar(150)
  area_pt    String? @db.VarChar(150)
  region_pt  String? @db.VarChar(150)
  title_de   String? @db.VarChar(150)
  area_de    String? @db.VarChar(150)
  region_de  String? @db.VarChar(150)
  title_fr   String? @db.VarChar(150)
  area_fr    String? @db.VarChar(150)
  region_fr  String? @db.VarChar(150)
  title_it   String? @db.VarChar(150)
  area_it    String? @db.VarChar(150)
  region_it  String? @db.VarChar(150)
  title_pl   String? @db.VarChar(150)
  area_pl    String? @db.VarChar(150)
  region_pl  String? @db.VarChar(150)
  title_ja   String? @db.VarChar(150)
  area_ja    String? @db.VarChar(150)
  region_ja  String? @db.VarChar(150)
  title_lt   String? @db.VarChar(150)
  area_lt    String? @db.VarChar(150)
  region_lt  String? @db.VarChar(150)
  title_lv   String? @db.VarChar(150)
  area_lv    String? @db.VarChar(150)
  region_lv  String? @db.VarChar(150)
  title_cz   String? @db.VarChar(150)
  area_cz    String? @db.VarChar(150)
  region_cz  String? @db.VarChar(150)

  @@map("_cities")
}

model countries {
  country_id Int     @id(map: "pk_country_cid")
  title_ru   String? @db.VarChar(60)
  title_ua   String? @db.VarChar(60)
  title_be   String? @db.VarChar(60)
  title_en   String? @db.VarChar(60)
  title_es   String? @db.VarChar(60)
  title_pt   String? @db.VarChar(60)
  title_de   String? @db.VarChar(60)
  title_fr   String? @db.VarChar(60)
  title_it   String? @db.VarChar(60)
  title_pl   String? @db.VarChar(60)
  title_ja   String? @db.VarChar(60)
  title_lt   String? @db.VarChar(60)
  title_lv   String? @db.VarChar(60)
  title_cz   String? @db.VarChar(60)

  @@map("_countries")
}

model regions {
  region_id  Int     @id(map: "pk_region_rid")
  country_id Int
  title_ru   String? @db.VarChar(150)
  title_ua   String? @db.VarChar(150)
  title_be   String? @db.VarChar(150)
  title_en   String? @db.VarChar(150)
  title_es   String? @db.VarChar(150)
  title_pt   String? @db.VarChar(150)
  title_de   String? @db.VarChar(150)
  title_fr   String? @db.VarChar(150)
  title_it   String? @db.VarChar(150)
  title_pl   String? @db.VarChar(150)
  title_ja   String? @db.VarChar(150)
  title_lt   String? @db.VarChar(150)
  title_lv   String? @db.VarChar(150)
  title_cz   String? @db.VarChar(150)

  @@map("_regions")
}

enum ConfirmationStatus {
  CONFIRM
  NOT_CONFIRM
}

enum BanStatus {
  BANNED
  NOT_BANNED
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../prisma/client"
  binaryTargets = ["native", "debian-openssl-1.1.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_APP_URL")
}

model AccountData {
  profileId          String             @id @db.Uuid // Изменено на UUID, чтобы соответствовать типу id в Profile
  passwordHash       String
  confirmationStatus ConfirmationStatus @default(NOT_CONFIRM)
  confirmationCode   String
  recoveryCode       String?
  banStatus          BanStatus          @default(NOT_BANNED)
  banDate            DateTime?
  profile            Profile?

  @@map("accountData")
}

model Profile {
  id          String      @id @default(uuid()) @db.Uuid
  name        String
  email       String      @unique
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  deletedAt   DateTime?
  accountData AccountData @relation(fields: [id], references: [profileId])

  sessions Session[]

  @@map("profile")
}

model Session {
  id             String   @id @default(uuid()) @db.Uuid
  profileId      String   @db.Uuid
  deviceName     String
  ip             String
  lastActiveDate DateTime
  profile        Profile  @relation(fields: [profileId], references: [id])

  @@map("session")
}

enum ConfirmationStatus {
  CONFIRM
  NOT_CONFIRM
}

enum BanStatus {
  BANNED
  NOT_BANNED
}
